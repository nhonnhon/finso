{"version":3,"sources":["assets/images/icons/collapsible-arrow.svg","constants/language.js","actions/common.js","constants/temp.js","services/api.js","configs/EndPoint.js","actions/index.js","components/Button/Button.js","components/Input/Checkbox.js","components/Input/Input.js","components/Input/Dropdown.js","components/Text/Text.js","components/Modal/Modal.js","services/validation.js","services/storage.js","modules/StoreInformation/components/TabsShowData/UserSetting.js","modules/StoreInformation/components/TabsShowData/TabsShowData.js","modules/StoreInformation/components/Register/Register.js","modules/StoreInformation/components/Login/Login.js","modules/StoreInformation/pages/Home/Home.js","App.js","serviceWorker.js","reducers/temp.js","reducers/index.js","configs/store.js","index.js"],"names":["module","exports","Lang","titleProject","somethingWentWrong","ok","topHeadlines","news","userSettings","noData","register","login","iWantToLogin","dontHaveAccount","enterHere","name","username","password","loginToChangeData","validateName","validateUserName","validatePassword","incorrect","registerSuccess","userNameisExisted","typeUserNameAndPassword","incorrectUnserNameAndPassword","keywordNews","update","saveSuccess","note","Alert","head","body","onClose","clickConfirm","showCloseButton","showCancelButton","message","_","isEmpty","swal","title","html","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButtonClass","cancelButtonClass","buttonsStyling","confirmButtonText","focusConfirm","focusCancel","cancelButtonText","cancel","then","confirm","value","APIKey","baseURL","listKeywords","label","customFetch","serviceName","method","options","url","timeout","params","data","Promise","resolve","reject","axios","request","response","status","text","catch","error","get","EndPoint","everything","getDataNewsWithKeyWord","keyword","dispatch","Api","q","apiKey","type","payload","changeKeyword","textMapper","white","gray","black","Button","props","size","color","className","children","onClick","link","textColor","bold","classNames","href","defaultProps","Checkbox","toggle","e","stopPropagation","onCheck","this","center","id","blocked","checked","style","alignItems","htmlFor","Component","Input","state","stateValue","focus","clear","setState","handleChange","onChange","onChangeId","readonly","target","handleFocus","handleBlur","handleKeyPress","key","onEnter","icon","disabled","placeholder","src","alt","autoFocus","onBlur","onFocus","onKeyPress","ref","node","input","Dropdown","prevState","showOptions","selectItem","selectedOption","renderOption","option","selectedItem","dropdownRef","React","createRef","nextOption","find","current","addEventListener","width","customStyle","renderOptionFunc","isFunction","tabIndex","require","autoHeight","map","Text","checkers","check","test","invalidInfo","requiredPassword","getInvalidValidationFrom","sources","result","compact","checker","compareValue","SInfo","window","localStorage","getItem","strValue","undefined","JSON","parse","setItem","checkedValue","isUndefined","stringify","deleteItem","removeItem","storageKey","UserSettings","saveData","validateSources","Validation","invalidateInfo","usersList","Storage","getIndexOfUser","findIndex","user","onChangeInput","connect","TabsShowData","toggleForm","isLogin","loginSuccess","isLogged","renderDataTabs","articles","article","index","urlToImage","description","backgroundImage","renderUserSettings","UserSetting","nextProps","headlines","articlesHeadLines","articlesNews","onSelect","handleChangeTab","toUpper","Array","isArray","Fragment","Register","checkUserNameIsExisted","push","Login","checkUserNameInLocal","Home","keywordHeadLines","getDataHeadLinesWithKeyWord","paddingLeft","temp","App","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aeb5950a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/collapsible-arrow.ef2915c0.svg\";","export const Lang = {\n  titleProject: 'Finso',\n  somethingWentWrong: 'Something went wrong',\n  ok: 'ok',\n  topHeadlines: 'Top Headlines',\n  news: 'News',\n  userSettings: 'User Settings',\n  noData: 'No data',\n  register: 'Register',\n  login: 'Login',\n  iWantToLogin: 'I want to login',\n  dontHaveAccount: \"Don't have account\",\n  enterHere: 'Enter here',\n  name: 'Your Name',\n  username: 'User Name',\n  password: 'Password',\n  loginToChangeData: 'You need to login to change data',\n  validateName: 'Your name should be anphabet',\n  validateUserName: 'User name should be anphabet or number',\n  validatePassword: 'Your password should not be blank',\n  incorrect: 'Incorrect',\n  registerSuccess: 'Register success',\n  userNameisExisted: 'Username is existed',\n  typeUserNameAndPassword: 'Please type username and password',\n  incorrectUnserNameAndPassword: 'Username and password is incorrect',\n  keywordNews: 'Keyword news',\n  update: 'Update',\n  saveSuccess: 'Save success',\n  note: 'Note',\n}\n","import swal from 'sweetalert2'\nimport _ from 'lodash'\nimport { Lang } from 'constants/language'\n\nexport { Alert }\n\nfunction Alert(head, body, onClose, clickConfirm, showCloseButton, showCancelButton = false) {\n  const message = !_.isEmpty(body) ? body : ''\n\n  swal({\n    title: !_.isEmpty(head) ? head : 'Server Error...',\n    html: '<pre style=\"white-space: pre-wrap;\">' + message + '</pre>',\n    imageUrl: '',\n    imageWidth: 76,\n    imageHeight: 76,\n    imageAlt: '',\n    customClass: '',\n    showCloseButton: showCloseButton ? showCloseButton : true,\n    confirmButtonClass: 'btn green text white',\n    cancelButtonClass: 'btn white h4',\n    buttonsStyling: false,\n    confirmButtonText: Lang.ok,\n    focusConfirm: true,\n    focusCancel: true,\n    showCancelButton: showCancelButton ? showCancelButton : false,\n    onClose,\n    cancelButtonText: Lang.cancel,\n  }).then(confirm => {\n    if (confirm && confirm.value) {\n      clickConfirm && clickConfirm()\n    }\n  })\n}\n","export const GET_DATA_HEADLINES_SUCCESS = 'GET_DATA_HEADLINES_SUCCESS'\nexport const GET_DATA_NEWS_SUCCESS = 'GET_DATA_NEWS_SUCCESS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const CHANGE_KEYWORD = 'CHANGE_KEYWORD'\nexport const APIKey = '845245a630a54a6fb27cda4c1e90c7f2'\nexport const baseURL = 'http://newsapi.org/v2/'\nexport const listKeywords = [\n  {\n    label: 'bitcoin',\n    value: 'bitcoin',\n  },\n  {\n    label: 'apple',\n    value: 'apple',\n  },\n  {\n    label: 'earthquake',\n    value: 'earthquake',\n  },\n  {\n    label: 'animal',\n    value: 'animal',\n  },\n]\n","import axios from 'axios'\nimport { Alert } from 'actions/common'\nimport { Lang } from 'constants/language'\nimport { baseURL } from 'constants/temp'\n\nfunction customFetch(serviceName, method, body = {}) {\n  const options = {\n    method,\n    baseURL: baseURL,\n    url: serviceName,\n    timeout: 6000000,\n  }\n\n  if (method === 'GET') {\n    options.params = body\n  } else if (method === 'POST') {\n    options.data = {\n      ...body,\n    }\n  }\n  return new Promise((resolve, reject) => {\n    axios\n      .request(options)\n      .then(response => {\n        const data = response.data\n        const status = response.status\n        if (status === 200) {\n          resolve(data)\n        } else {\n          Alert(Lang.somethingWentWrong, '', [{ text: Lang.ok }])\n        }\n      })\n      .catch(error => {\n        Alert(Lang.somethingWentWrong, '', [{ text: Lang.ok }])\n        reject(error)\n      })\n  })\n}\n\nfunction get(serviceName, method = 'GET', body) {\n  return customFetch(serviceName, method, body)\n}\n\nexport default { get }\n","const EndPoint = {\n  everything: 'everything',\n  topHeadlines: 'top-headlines',\n}\n\nexport default EndPoint\n","import { Alert } from './common'\nimport { Lang } from 'constants/language'\nimport Api from 'services/api'\nimport EndPoint from 'configs/EndPoint'\nimport {\n  GET_DATA_HEADLINES_SUCCESS,\n  GET_DATA_NEWS_SUCCESS,\n  LOGIN_SUCCESS,\n  CHANGE_KEYWORD,\n  APIKey,\n} from 'constants/temp'\n\nconst getDataNewsWithKeyWord = keyword => {\n  return dispatch => {\n    Api.get(EndPoint.everything, 'GET', {\n      q: keyword,\n      apiKey: APIKey,\n    })\n      .then(data => {\n        if (data) {\n          dispatch({\n            type: GET_DATA_NEWS_SUCCESS,\n            payload: data,\n          })\n        }\n      })\n      .catch(() => {\n        Alert(Lang.somethingWentWrong, '', [{ text: Lang.ok }])\n      })\n  }\n}\n\nconst getDataHeadLinesWithKeyWord = keyword => {\n  return dispatch => {\n    Api.get(EndPoint.topHeadlines, 'GET', {\n      sources: keyword,\n      apiKey: APIKey,\n    })\n      .then(data => {\n        if (data) {\n          dispatch({\n            type: GET_DATA_HEADLINES_SUCCESS,\n            payload: data,\n          })\n        }\n      })\n      .catch(() => {\n        Alert(Lang.somethingWentWrong, '', [{ text: Lang.ok }])\n      })\n  }\n}\n\nconst login = data => {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data,\n    })\n  }\n}\n\nconst changeKeyword = keyword => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_KEYWORD,\n      payload: keyword,\n    })\n    dispatch(getDataNewsWithKeyWord(keyword))\n  }\n}\n\nexport { getDataNewsWithKeyWord, getDataHeadLinesWithKeyWord, changeKeyword, login }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Button.scss'\n\nconst textMapper = {\n  white: 'white',\n  gray: 'gray',\n  black: 'black',\n}\n\nconst Button = props => {\n  const { label, size, color, className, children, onClick, link, textColor, bold } = props\n\n  const classNames = `btn  ${size || ''} ${color || ''} ${className || ''}`\n\n  return (\n    <a href={link || 'javascript: void(0)'} className={classNames} onClick={onClick}>\n      {children ? (\n        children\n      ) : (\n        <span className={`text ${bold === true ? 'bold' : ''} ${textColor || textMapper[color]} ${size}`}>\n          {label}\n        </span>\n      )}\n    </a>\n  )\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'big']),\n  color: PropTypes.oneOf(['white', 'black', 'gray', 'gray1', 'green', 'transparent']),\n  label: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n}\n\nButton.defaultProps = {\n  className: '',\n  color: '',\n}\n\nexport default Button\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Checkbox.scss'\n\nclass Checkbox extends Component {\n  static propTypes = {\n    checked: PropTypes.bool,\n    blocked: PropTypes.bool,\n    children: PropTypes.node,\n    text: PropTypes.string,\n    center: PropTypes.bool,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    color: PropTypes.string,\n    onCheck: PropTypes.func,\n  }\n\n  static defaultProps = {\n    color: '\u001c',\n    blocked: false,\n  }\n\n  toggle = e => {\n    e.stopPropagation()\n    this.props.onCheck()\n  }\n\n  render() {\n    const { children, text, center, className, id, color, blocked, checked } = this.props\n    const statusHold = checked ? 'checked' : ''\n    const status = blocked ? 'blocked' : statusHold\n    return (\n      <div\n        className={`checkbox ${status} ${className || ''}`}\n        style={{ alignItems: center ? 'center' : '' }}\n        onClick={this.toggle}\n      >\n        <div className=\"icon\" />\n        <input className=\"hide\" id={id} type=\"checkbox\" />\n        {text ? (\n          <label className={`pad-left ${color}`} htmlFor={id}>\n            {text}\n          </label>\n        ) : (\n          <label className={`pad-left ${color}`} htmlFor={id}>\n            <div className={`content`}>{children}</div>\n          </label>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Checkbox\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Input.scss'\n\nclass Input extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    icon: PropTypes.string,\n    label: PropTypes.string,\n    readonly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    password: PropTypes.bool,\n    placeholder: PropTypes.string,\n    className: PropTypes.string,\n    customStyle: PropTypes.object,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    onBlur: PropTypes.func,\n  }\n\n  static defaultProps = {\n    type: 'text',\n    readonly: false,\n    onChange: () => {},\n    onBlur: () => {},\n    value: '',\n  }\n\n  state = {\n    stateValue: this.props.value,\n    focus: false,\n    type: this.props.password ? 'password' : 'text',\n  }\n\n  clear = () => {\n    this.setState({ stateValue: '' })\n  }\n\n  focus = () => {\n    this.setState({ focus: true })\n  }\n\n  handleChange = e => {\n    const { id, onChange, onChangeId } = this.props\n    if (!this.readonly) {\n      const value = e.target.value\n\n      onChange && onChange(value)\n      onChangeId && onChangeId(id, value)\n      this.setState({ stateValue: value })\n    }\n  }\n\n  handleFocus = () => {\n    this.setState({ focus: true })\n  }\n\n  handleBlur = () => {\n    this.setState({ focus: false })\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.props.onEnter && this.props.onEnter()\n    }\n  }\n\n  render() {\n    const { stateValue, type, focus } = this.state\n    const { id, label, icon, disabled, className, placeholder, value } = this.props\n\n    return (\n      <div className={`sc-input-container ${className || ''} ${label ? '' : 'no-label'}`}>\n        {label && <div className={`label text small ${disabled ? 'disabled' : ''}`}>{label}</div>}\n        <div className=\"d-flex align-left flex1\">\n          {icon && <img className=\"mar-right-sm extra-icon\" src={icon} alt=\"\" />}\n          <div className={`input-container ${focus ? 'focus' : ''}`}>\n            <input\n              key={id}\n              autoFocus={this.props.autoFocus}\n              value={value || stateValue}\n              disabled={disabled}\n              type={type}\n              placeholder={placeholder}\n              onBlur={this.handleBlur}\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n              ref={node => (this.input = node)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Input\n","import { map, isFunction, find } from 'lodash'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text } from 'components'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport './Dropdown.scss'\n\nclass Dropdown extends Component {\n  static propTypes = {\n    icon: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    className: PropTypes.string,\n    renderOption: PropTypes.func,\n    onChange: PropTypes.func,\n    options: PropTypes.array.isRequired,\n    width: PropTypes.string, //in row\n    value: PropTypes.any,\n    customStyle: PropTypes.object,\n  }\n\n  static defaultProps = {\n    // placeholder: 'Please select',\n    renderOption: null,\n    width: 'auto', //in row\n    onChange: () => {},\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      showOptions: false,\n      selectedOption: { value: '', label: '' },\n      selectedItem: this.props.placeholder,\n    }\n\n    this.dropdownRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const nextOption = find(this.props.options, { value: this.props.value })\n    if (nextOption) {\n      this.setState({ selectedOption: nextOption })\n    }\n\n    const el = this.dropdownRef.current\n\n    el.addEventListener('focusout', () => {\n      this.setState({\n        showOptions: false,\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.props.value && this.props.value !== this.state.selectedOption.value) {\n      const nextOption = find(this.props.options, { value: this.props.value })\n      if (nextOption) {\n        this.setState({ selectedOption: nextOption })\n      } else {\n        this.setState({ selectedOption: { value: '', label: '' } })\n      }\n    }\n  }\n\n  get value() {\n    return this.state.selectedOption.value\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ showOptions: !prevState.showOptions }))\n  }\n\n  selectItem = selectedOption => {\n    this.setState({ selectedOption })\n    this.toggle()\n    if (this.props.onChange) this.props.onChange(selectedOption)\n  }\n\n  renderOption = option => {\n    return (\n      <div className=\"dropdown-option\">\n        <Text>{option.label}</Text>\n      </div>\n    )\n  }\n\n  render() {\n    const { showOptions, selectedOption } = this.state\n    const { label, placeholder, className, icon, options, renderOption, width, customStyle } = this.props\n    const renderOptionFunc = isFunction(renderOption) ? renderOption : this.renderOption\n    const classNames = `dropdown ${showOptions ? 'is-open' : ''}`\n\n    return (\n      <div style={{ width }} className={classNames} tabIndex=\"-1\" ref={this.dropdownRef}>\n        <Text className=\"small label\">{label}</Text>\n        <div onClick={this.toggle} style={customStyle} className={`dropdown-header ${className || ''}`}>\n          <div className=\"row align-left\">\n            {icon && <img className=\"mar-right-sm extra-icon\" src={icon} alt=\"\" />}\n            <div>\n              <Text className={`medium  ${selectedOption.value ? 'text-dark' : 'text-placeholder'}`}>\n                {selectedOption.value ? selectedOption.label : placeholder}\n              </Text>\n            </div>\n          </div>\n          <img className=\"arrow\" src={require('assets/images/icons/collapsible-arrow.svg')} alt=\"\" />\n        </div>\n        <div className=\"dropdown-content\">\n          <Scrollbars autoHeight>\n            {map(options, option => {\n              return (\n                <div\n                  onClick={() => {\n                    this.selectItem(option)\n                  }}\n                  key={option.value}\n                >\n                  {renderOptionFunc(option)}\n                </div>\n              )\n            })}\n          </Scrollbars>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dropdown\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Text.scss'\n\nconst Text = props => {\n  const { value, className, children } = props\n  const classNames = `text ${className || ''}`\n  return (\n    <p {...props} className={classNames}>\n      {children || value}\n    </p>\n  )\n}\n\nText.propTypes = {\n  value: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nexport default Text\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Modal.scss'\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    hideCloseBtn: PropTypes.bool,\n  }\n\n  state = {\n    isActive: this.props.isActive,\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState(\n      {\n        isActive: nextProps.isActive,\n      },\n      () => {\n        this.state.isActive\n          ? document.querySelector('body').classList.add('modal-open')\n          : document.querySelector('body').classList.remove('modal-open')\n      }\n    )\n  }\n\n  close = () => {\n    const { onClose } = this.props\n\n    this.setState(\n      {\n        isActive: false,\n      },\n      () => {\n        document.querySelector('body').classList.remove('modal-open')\n        onClose && onClose()\n      }\n    )\n  }\n\n  render() {\n    const { className, hideCloseBtn, children } = this.props\n    const { isActive } = this.state\n\n    return (\n      <div className={`modal ${isActive ? 'modal-open' : ''} ${className ? className : ''}`}>\n        <div className=\"modal-dialog\">\n          <div className={`modal-content`}>\n            {!hideCloseBtn && (\n              <div className=\"cancel-btn-modal\" onClick={this.close}>\n                <div className=\"close-button\">X</div>\n              </div>\n            )}\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal\n","import { Lang } from 'constants/language'\nimport _ from 'lodash'\n\nconst checkers = {\n  name: {\n    check: value => /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/.test(value),\n    invalidInfo: () => ({\n      title: Lang.incorrect,\n      message: Lang.validateName,\n    }),\n  },\n  username: {\n    check: value => /^[0-9a-zA-Z]+$/.test(value),\n    invalidInfo: () => ({\n      title: Lang.incorrect,\n      message: Lang.validateUserName,\n    }),\n  },\n  requiredPassword: {\n    check: value => value != '',\n    invalidInfo: () => ({\n      title: Lang.incorrect,\n      message: Lang.validatePassword,\n    }),\n  },\n}\n\n/**\n *\n * @param {*} source\n * soures is an array of validation source object\n * soure contain 3 properties 'type' 'value' 'comparevalue'\n */\nfunction getInvalidValidationFrom(sources = []) {\n  const result = _.compact(sources).find(\n    ({ checker, value, compareValue }) => !checker.check(value, compareValue),\n  )\n\n  if (result) {\n    const invalidInfo = result.checker.invalidInfo()\n    return invalidInfo\n  }\n\n  return null\n}\n\nexport default { checkers, getInvalidValidationFrom }\n","import { isUndefined } from 'lodash'\nconst SInfo = window.localStorage\n\nfunction getItem(key) {\n  const strValue = SInfo.getItem(key)\n  return strValue && strValue !== undefined && strValue !== 'undefined' ? JSON.parse(strValue) : undefined\n}\n\nfunction setItem(key, value) {\n  const checkedValue = value === '' || isUndefined(value) ? value : JSON.stringify(value)\n\n  return SInfo.setItem(key, checkedValue)\n}\n\nfunction deleteItem(key) {\n  return SInfo.removeItem(key)\n}\n\nexport default { getItem, setItem, deleteItem }\nexport const storageKey = {\n  USERS: 'USER_FINSO',\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeKeyword } from 'actions'\nimport { Button, Input, Dropdown } from 'components'\nimport { Lang } from 'constants/language'\nimport { Alert } from 'actions/common'\nimport Validation from 'services/validation'\nimport Storage, { storageKey } from 'services/storage'\nimport { listKeywords } from 'constants/temp'\n\nclass UserSettings extends React.Component {\n  saveData = () => {\n    const { name, username, password, keywordNews, changeKeyword } = this.props\n\n    const validateSources = [\n      {\n        checker: Validation.checkers.name,\n        value: name,\n      },\n      {\n        checker: Validation.checkers.requiredPassword,\n        value: password,\n      },\n    ]\n\n    const invalidateInfo = Validation.getInvalidValidationFrom(validateSources)\n\n    if (invalidateInfo) {\n      Alert(invalidateInfo.title, invalidateInfo.message, [{ text: Lang.ok }])\n    } else {\n      let usersList = Storage.getItem(storageKey.USERS) || []\n\n      const getIndexOfUser = usersList.findIndex(user => user.username === username)\n      usersList[getIndexOfUser].name = name\n      usersList[getIndexOfUser].password = password\n      Storage.setItem(storageKey.USERS, usersList)\n      changeKeyword(keywordNews)\n      Alert(Lang.saveSuccess)\n    }\n  }\n\n  render() {\n    const { keywordNews, name, password, onChangeInput } = this.props\n\n    return (\n      <div>\n        <Dropdown\n          id=\"keywordNews\"\n          label={Lang.keywordNews}\n          placeholder={Lang.enterHere}\n          onChange={({ value }) => onChangeInput('keywordNews', value)}\n          options={listKeywords}\n          value={keywordNews}\n        />\n        <Input\n          id=\"name\"\n          value={name}\n          type=\"text\"\n          className=\"flex1 mt-2 mb-2\"\n          onChangeId={onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.name}\n        />\n        <Input\n          id=\"password\"\n          value={password}\n          type=\"password\"\n          password={true}\n          className=\"flex1 mb-2\"\n          onChangeId={onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.password}\n        />\n        <Button\n          color=\"green\"\n          size=\"small\"\n          className=\"mt-2\"\n          onClick={this.saveData}\n          textColor=\"white\"\n          label={Lang.update}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { changeKeyword },\n)(UserSettings)\n","import React from 'react'\nimport _ from 'lodash'\nimport { Lang } from 'constants/language'\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs'\nimport { Login, Register } from 'modules/StoreInformation/components'\nimport UserSettings from './UserSetting'\n\nimport './styles.scss'\n\nclass TabsShowData extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      keywordNews,\n      user: { name, username, password },\n    } = this.props\n\n    this.state = {\n      isLogged: false,\n      isLogin: true,\n      keywordNews,\n      name,\n      username,\n      password,\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.keywordNews !== this.props.keywordNews) {\n      this.setState({\n        keywordNews: nextProps.keywordNews,\n      })\n    }\n\n    if (nextProps.user !== this.props.user) {\n      this.setState({\n        ...nextProps.user,\n      })\n    }\n  }\n\n  toggleForm = () => {\n    const { isLogin } = this.state\n    this.setState({\n      isLogin: !isLogin,\n    })\n  }\n\n  loginSuccess = () => {\n    const { isLogged } = this.state\n    this.setState({\n      isLogged: !isLogged,\n    })\n  }\n\n  onChangeInput = (id, value) => {\n    this.setState({\n      [id]: value,\n    })\n  }\n\n  renderDataTabs = articles =>\n    _.map(articles, (article, index) => {\n      const { urlToImage, title, description, url } = article\n\n      return (\n        <div className=\"col-md-4\" key={index}>\n          <div className=\"article\">\n            <div className=\"image\" style={{ backgroundImage: `url(${urlToImage})` }}></div>\n            <h3>\n              <a href={url}>{title}</a>\n            </h3>\n            <p>{description}</p>\n          </div>\n        </div>\n      )\n    })\n\n  renderUserSettings = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <UserSettings {...this.state} onChangeInput={this.onChangeInput} />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { isLogin, isLogged } = this.state\n    const { headlines, news, keywordNews } = this.props\n    const articlesHeadLines = headlines.articles\n    const articlesNews = news.articles\n\n    return (\n      <div className=\"pt-3 pb-3\">\n        <Tabs onSelect={this.handleChangeTab}>\n          <TabList>\n            <Tab className=\"react-tabs__tab\">{Lang.topHeadlines}</Tab>\n            <Tab className=\"react-tabs__tab\">{`${_.toUpper(keywordNews)} ${Lang.news}`}</Tab>\n            <Tab className=\"react-tabs__tab\">{Lang.userSettings}</Tab>\n          </TabList>\n\n          <TabPanel>\n            {Array.isArray(articlesHeadLines) && !_.isEmpty(articlesHeadLines) ? (\n              <div className=\"row pt-2\">{this.renderDataTabs(articlesHeadLines)}</div>\n            ) : (\n              <div>{Lang.noData}</div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {Array.isArray(articlesNews) && !_.isEmpty(articlesNews) ? (\n              <div className=\"row pt-2\">\n                <h4>{`This is ${_.toUpper(\n                  keywordNews,\n                )} news, you can change keyword news in User Setting tab`}</h4>\n                {this.renderDataTabs(articlesNews)}\n              </div>\n            ) : (\n              <div>{Lang.noData}</div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            <div className=\"pt-2\">\n              {isLogged ? (\n                this.renderUserSettings()\n              ) : isLogin ? (\n                <React.Fragment>\n                  <h3>{Lang.loginToChangeData}</h3>\n                  <Login loginSuccess={this.loginSuccess} toggleForm={this.toggleForm} />\n                </React.Fragment>\n              ) : (\n                <Register toggleForm={this.toggleForm} />\n              )}\n            </div>\n          </TabPanel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nexport default TabsShowData\n","import React from 'react'\nimport { Button, Input } from 'components'\nimport { Lang } from 'constants/language'\nimport { Alert } from 'actions/common'\nimport Validation from 'services/validation'\nimport Storage, { storageKey } from 'services/storage'\nimport _ from 'lodash'\n\nclass Register extends React.Component {\n  state = {\n    name: '',\n    username: '',\n    password: '',\n  }\n\n  onChangeInput = (id, value) => {\n    this.setState({\n      [id]: value,\n    })\n  }\n\n  register = () => {\n    const { name, username, password } = this.state\n    const { toggleForm } = this.props\n\n    const validateSources = [\n      {\n        checker: Validation.checkers.name,\n        value: name,\n      },\n      {\n        checker: Validation.checkers.username,\n        value: username,\n      },\n      {\n        checker: Validation.checkers.requiredPassword,\n        value: password,\n      },\n    ]\n\n    const invalidateInfo = Validation.getInvalidValidationFrom(validateSources)\n\n    if (invalidateInfo) {\n      Alert(invalidateInfo.title, invalidateInfo.message, [{ text: Lang.ok }])\n    } else {\n      let usersList = Storage.getItem(storageKey.USERS) || []\n\n      const checkUserNameIsExisted = usersList.find(user => user.username === username)\n      if (_.isEmpty(checkUserNameIsExisted)) {\n        usersList.push({ name: name, username: username, password: password })\n        Storage.setItem(storageKey.USERS, usersList)\n        Alert(Lang.registerSuccess, '', toggleForm)\n      } else {\n        Alert(Lang.userNameisExisted)\n      }\n    }\n  }\n\n  render() {\n    const { name, username, password } = this.state\n    const { toggleForm } = this.props\n\n    return (\n      <div className=\"pt-3 pb-3\">\n        <Input\n          id=\"name\"\n          value={name}\n          type=\"text\"\n          className=\"flex1 mb-2\"\n          onChangeId={this.onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.name}\n        />\n        <Input\n          id=\"username\"\n          value={username}\n          type=\"text\"\n          className=\"flex1 mb-2\"\n          onChangeId={this.onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.username}\n        />\n        <Input\n          id=\"password\"\n          value={password}\n          type=\"password\"\n          password={true}\n          className=\"flex1 mb-2\"\n          onChangeId={this.onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.password}\n        />\n        <Button\n          color=\"green\"\n          size=\"small\"\n          className=\"mt-2 mr-1\"\n          onClick={this.register}\n          textColor=\"white\"\n          label={Lang.register}\n        />\n        <Button\n          color=\"green\"\n          size=\"small\"\n          className=\"mt-2\"\n          onClick={toggleForm}\n          textColor=\"white\"\n          label={Lang.iWantToLogin}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from 'actions'\nimport { Button, Input } from 'components'\nimport { Lang } from 'constants/language'\nimport { Alert } from 'actions/common'\nimport Storage, { storageKey } from 'services/storage'\nimport _ from 'lodash'\n\nclass Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n  }\n\n  onChangeInput = (id, value) => {\n    this.setState({\n      [id]: value,\n    })\n  }\n\n  login = () => {\n    const { username, password } = this.state\n\n    if (username === '' || password === '') {\n      Alert(Lang.typeUserNameAndPassword)\n    } else {\n      let usersList = Storage.getItem(storageKey.USERS) || []\n\n      const checkUserNameInLocal = usersList.find(\n        user => user.username === username && user.password === password,\n      )\n\n      if (_.isEmpty(checkUserNameInLocal)) {\n        Alert(Lang.incorrectUnserNameAndPassword)\n      } else {\n        this.props.login(checkUserNameInLocal)\n        this.props.loginSuccess()\n      }\n    }\n  }\n\n  render() {\n    const { username, password } = this.state\n    const { toggleForm } = this.props\n\n    return (\n      <div className=\"pt-3 pb-3\">\n        <Input\n          id=\"username\"\n          value={username}\n          type=\"text\"\n          className=\"flex1 mb-2\"\n          onChangeId={this.onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.username}\n        />\n        <Input\n          id=\"password\"\n          value={password}\n          password\n          type=\"password\"\n          className=\"flex1 mb-2\"\n          onChangeId={this.onChangeInput}\n          placeholder={Lang.enterHere}\n          label={Lang.password}\n        />\n        <Button\n          color=\"green\"\n          size=\"small\"\n          className=\"mt-2 mr-1\"\n          onClick={this.login}\n          textColor=\"white\"\n          label={Lang.login}\n        />\n        <Button\n          color=\"green\"\n          size=\"small\"\n          className=\"mt-2\"\n          onClick={toggleForm}\n          textColor=\"white\"\n          label={Lang.dontHaveAccount}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { login },\n)(Login)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getDataNewsWithKeyWord, getDataHeadLinesWithKeyWord, changeKeyword } from 'actions'\nimport { TabsShowData } from 'modules/StoreInformation/components'\nimport { Lang } from 'constants/language'\n\nclass Home extends React.Component {\n  componentDidMount() {\n    const { keywordHeadLines, keywordNews, getDataNewsWithKeyWord, getDataHeadLinesWithKeyWord } = this.props\n    getDataNewsWithKeyWord(keywordNews)\n    getDataHeadLinesWithKeyWord(keywordHeadLines)\n  }\n\n  render() {\n    const { headlines, news, keywordNews, user } = this.props\n\n    return (\n      <div className=\"pt-3 pb-3\">\n        <h2 className=\"title-page\">{Lang.titleProject}</h2>\n        <TabsShowData\n          user={user}\n          headlines={headlines}\n          news={news}\n          keywordNews={keywordNews}\n          changeKeyword={changeKeyword}\n        />\n        <hr></hr>\n        <h3>Note</h3>\n        <p className=\"mt-1\">Homepage have 3 tabs</p>\n        <p className=\"mt-1\">\n          First tabs: top headline news with image, title (click title to redirect original link) and\n          description\n        </p>\n        <p className=\"mt-1\">\n          Second tab: custom news based with keyword, default keyword is BITCOIN, user can change this key\n          word in third tab\n        </p>\n        <p className=\"mt-1\">Third tab: user settings</p>\n        <ul style={{ paddingLeft: '40px' }}>\n          <li className=\"mt-1\">if user have not logged yet: form login will show</li>\n          <li className=\"mt-1\">\n            if user does not have account, click button do not have account, the form register will show. Data\n            of user is saved in storage\n          </li>\n          <li className=\"mt-1\">\n            After register success, user must log in, if login success, the form change user data will show\n            <br></br> (username can not change, only change name and password)\n          </li>\n          <li className=\"mt-1\">\n            After save the changes, the data in seconds tabs will change and based with keyword\n          </li>\n          <li className=\"mt-1\">Reload and login again with data user just changed</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ temp }) => {\n  const { keywordHeadLines, keywordNews, headlines, news, user } = temp\n\n  return {\n    keywordHeadLines,\n    keywordNews,\n    headlines,\n    news,\n    user,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getDataNewsWithKeyWord, getDataHeadLinesWithKeyWord, changeKeyword },\n)(Home)\n","import React from 'react'\n\nimport './App.css'\nimport { Home } from 'modules/StoreInformation'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_DATA_HEADLINES_SUCCESS,\n  GET_DATA_NEWS_SUCCESS,\n  LOGIN_SUCCESS,\n  CHANGE_KEYWORD,\n} from 'constants/temp'\n\nconst initialState = {\n  headlines: {},\n  news: {},\n  keywordHeadLines: 'techcrunch',\n  keywordNews: 'bitcoin',\n  user: {},\n}\n\nexport default function temp(state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_DATA_HEADLINES_SUCCESS:\n      return { ...state, headlines: payload }\n\n    case GET_DATA_NEWS_SUCCESS:\n      return { ...state, news: payload }\n\n    case LOGIN_SUCCESS:\n      return { ...state, user: payload }\n\n    case CHANGE_KEYWORD:\n      return { ...state, keywordNews: payload }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport temp from './temp'\n\nconst rootReducer = combineReducers({ temp })\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from 'reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport store from 'configs/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}